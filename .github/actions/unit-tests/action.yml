name: Unit Tests 🧪
description: Run unit tests and upload reports.
author: Antoine ZANARDI

inputs:
  unit-tests-coverage-base-cache-key:
    description: Base cache key for unit tests coverage reports
    required: true
    default: unit-tests-coverage
  unit-tests-coverage-reports-path:
    description: Path to unit tests coverage reports
    required: true
    default: tests/unit/coverage

outputs:
  vitest-tests-count:
    description: Number of Vitest tests executed
    value: ${{ steps.vitest-results.outputs.vitest-tests-count }}
  vitest-statements-count:
    description: Number of statements covered by Vitest
    value: ${{ steps.vitest-results.outputs.vitest-statements-count }}
  vitest-branches-count:
    description: Number of branches covered by Vitest
    value: ${{ steps.vitest-results.outputs.vitest-branches-count }}
  vitest-functions-count:
    description: Number of functions covered by Vitest
    value: ${{ steps.vitest-results.outputs.vitest-functions-count }}
  vitest-lines-count:
    description: Number of lines covered by Vitest
    value: ${{ steps.vitest-results.outputs.vitest-lines-count }}
  vitest-statements-percent:
    description: Percentage of statements covered by Vitest
    value: ${{ steps.vitest-results.outputs.vitest-statements-percent }}
  vitest-branches-percent:
    description: Percentage of branches covered by Vitest
    value: ${{ steps.vitest-results.outputs.vitest-branches-percent }}
  vitest-functions-percent:
    description: Percentage of functions covered by Vitest
    value: ${{ steps.vitest-results.outputs.vitest-functions-percent }}
  vitest-lines-percent:
    description: Percentage of lines covered by Vitest
    value: ${{ steps.vitest-results.outputs.vitest-lines-percent }}

runs:
  using: composite
  steps:
    - name: Compute safe branch name 🍃
      id: safe-branch-name
      uses: ./.github/actions/compute-safe-branch-name

    - name: Install project 📦
      uses: ./.github/actions/install-project

    - name: Unit tests 🧪
      id: unit-tests
      shell: bash
      continue-on-error: true
      run: |
        set -o pipefail
        pnpm run test:unit:cov 2>&1 | tee vitest-output.log
        cat vitest-output.log | "${{ github.workspace }}/scripts/transform-vitest-results-as-env-variables.sh" >> "$GITHUB_ENV"

    - name: Set Vitest Results As Outputs 📝
      id: vitest-results
      shell: bash
      run: |
        {
          echo "vitest-tests-count=${{ env.VITEST_TESTS_COUNT }}"
          echo "vitest-statements-count=${{ env.VITEST_STATEMENTS_COUNT }}"
          echo "vitest-branches-count=${{ env.VITEST_BRANCHES_COUNT }}"
          echo "vitest-functions-count=${{ env.VITEST_FUNCTIONS_COUNT }}"
          echo "vitest-lines-count=${{ env.VITEST_LINES_COUNT }}"
          echo "vitest-statements-percent=${{ env.VITEST_STATEMENTS_PERCENT }}"
          echo "vitest-branches-percent=${{ env.VITEST_BRANCHES_PERCENT }}"
          echo "vitest-functions-percent=${{ env.VITEST_FUNCTIONS_PERCENT }}"
          echo "vitest-lines-percent=${{ env.VITEST_LINES_PERCENT }}"
        } >> "$GITHUB_OUTPUT"

    - name: Save unit tests coverage in cache 🥡
      uses: actions/cache/save@v4
      id: cache-unit-tests-coverage
      if: ${{ hashFiles(format('{0}/lcov.info', inputs.unit-tests-coverage-reports-path)) != '' }}
      with:
        path: ${{ inputs.unit-tests-coverage-reports-path }}
        key: ${{ inputs.unit-tests-coverage-base-cache-key }}-${{ steps.safe-branch-name.outputs.safe-branch-name }}-${{ hashFiles(format('{0}/lcov.info', inputs.unit-tests-coverage-reports-path)) }}

    - name: Save unit tests coverage report as artifact 💎
      uses: actions/upload-artifact@v4
      with:
        name: unit-tests-coverage-report
        path: ${{ inputs.unit-tests-coverage-reports-path }}
        if-no-files-found: ignore
        retention-days: 2

    - name: Exit with error if unit tests failed 🚨
      if: steps.unit-tests.outcome != 'success'
      shell: bash
      run: exit 1
